{
  "openapi": "3.0.0",
  "info": {
    "title": "Simple E-commerce API",
    "description": "A sample API for managing products and user orders in an e-commerce application.",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "List all products",
        "description": "Retrieves a list of all available products, with optional filtering by category.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "Filter products by category name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Adds a new product to the store catalog.",
        "tags": ["Products"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "summary": "Get product by ID",
        "description": "Fetches the details of a specific product using its unique ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The ID of the product to retrieve.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update a product",
        "description": "Updates an existing product's details by its ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The ID of the product to update.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Deletes a product from the catalog by its ID.",
        "tags": ["Products"],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "description": "The ID of the product to delete.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content. Product deleted successfully."
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/users/{userId}/orders": {
      "get": {
        "summary": "Get user's orders",
        "description": "Retrieves the order history for a specific user.",
        "tags": ["Orders"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "category": {
            "type": "string"
          },
          "stock": {
            "type": "integer"
          }
        }
      },
      "NewProduct": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "category": {
            "type": "string"
          },
          "stock": {
            "type": "integer"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["placed", "shipped", "delivered", "cancelled"]
          },
          "total": {
            "type": "number",
            "format": "float"
          }
        }
      }
    }
  }
}
